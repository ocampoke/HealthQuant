<!Zoom map code adapted from http://bl.ocks.org/michellechandra/0b2ce4923dc9b5809922 and https://bl.ocks.org/mbostock/4699541>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>PEDIATRIC LOCATIONS</title>
</head>

<body>
    <div class="container">
        <h2>Top 10 Pediatric Hospitals</h1>
        <h3>(per 2022 US News and World Reports)</h1>
    </div>

<script src="https://d3js.org/d3.v3.min.js"></script>
<script src="https://d3js.org/topojson.v1.min.js"></script>
<script>

var width = 960,
    height = 500,
    active = d3.select(null);

var projection = d3.geo.albersUsa()
    .scale(1000)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("rect")
    .attr("class", "background")
    .attr("width", width)
    .attr("height", height)
    .on("click", reset);

var g = svg.append("g")
    .style("stroke-width", "1.5px");
    


d3.json("https://gist.githubusercontent.com/mbostock/4090846/raw/us.json", function(error, us) {
  if (error) throw error;

  g.selectAll("path")
      .data(topojson.feature(us, us.objects.states).features)
    .enter().append("path")
      .attr("d", path)
      .attr("class", "feature")
      .on("click", clicked);

  g.append("path")
      .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
      .attr("class", "mesh")
      .attr("d", path);
});

function clicked(d) {
  if (active.node() === this) return reset();
  active.classed("active", false);
  active = d3.select(this).classed("active", true);

  var bounds = path.bounds(d),
      dx = bounds[1][0] - bounds[0][0],
      dy = bounds[1][1] - bounds[0][1],
      x = (bounds[0][0] + bounds[1][0]) / 2,
      y = (bounds[0][1] + bounds[1][1]) / 2,
      scale = .9 / Math.max(dx / width, dy / height),
      translate = [width / 2 - scale * x, height / 2 - scale * y];

  g.transition()
      .duration(750)
      .style("stroke-width", 1.5 / scale + "px")
      .attr("transform", "translate(" + translate + ")scale(" + scale + ")");
}

function reset() {
  active.classed("active", false);
  active = d3.select(null);

  g.transition()
      .duration(750)
      .style("stroke-width", "1.5px")
      .attr("transform", "");
}


var div = d3.select("body")
		    .append("div")   
    		.attr("class", "tooltip2")               
    		.style("opacity", 0);

d3.csv("cities.csv", function(data) {
g.selectAll("circle")
  .data(data)
  .enter()
  .append("circle")
  .attr("cx", function(d) {
    return projection([d.lon, d.lat])[0];
  })
  .attr("cy", function(d) {
    return projection([d.lon, d.lat])[1];
  })
  .attr("r", function(d) {
    return Math.sqrt(d.rank) * 4;
  })
  
    .style("fill", "rgb(217,91,67)")  
    .style("opacity", 0.85) 


    .on("mouseover", function(d) {      
    	div.transition()        
      	   .duration(200)      
           .style("opacity", .9);      
           div.text(d.place)
           .style("left", (d3.event.pageX) + "px")     
           .style("top", (d3.event.pageY - 28) + "px");    
	})   

    // fade out tooltip on mouse out               
    .on("mouseout", function(d) {       
        div.transition()        
           .duration(500)      
           .style("opacity", 0);   
    })
});  


var zoom = d3.behavior.zoom()
    .translate(projection.translate())
    .scaleExtent([height, Infinity])
    .scale(projection.scale())
    .on("zoom", function() {
        projection.translate(d3.event.translate).scale(d3.event.scale)
        g.selectAll("path.zoomable").attr("d", path);
        projection.translate(d3.event.translate).scale(d3.event.scale)
        svg.selectAll(".place").attr("d", path);    
        projection.translate(d3.event.translate).scale(d3.event.scale)
        g.selectAll("circle").attr("d", path);
});


</script>
</body>



